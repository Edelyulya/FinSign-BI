import json
from pathlib import Path

import pandas as pd
import requests
from sqlalchemy import create_engine
from sqlalchemy.exc import OperationalError

# ---------- Config ----------
ROOT = Path(__file__).resolve().parents[1]
CONFIG_PATH = ROOT / "config.json"

if not CONFIG_PATH.exists():
    raise FileNotFoundError("–§–∞–π–ª config.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞.")

with CONFIG_PATH.open("r", encoding="utf-8") as f:
    cfg = json.load(f)

db = cfg["db"]
ozon = cfg["ozon_api"]

# ---------- API settings ----------
URL = "https://api-seller.ozon.ru/v2/analytics/stock_on_warehouses"
HEADERS = {
    "Client-Id": ozon["client_id"],
    "Api-Key": ozon["api_key"],
}
TIMEOUT = 30  # —Å–µ–∫

def run_etl():
    print("üöÄ –ó–∞–ø—É—Å–∫ ETL –∏–∑ Ozon API...")

    try:
        resp = requests.post(URL, json={}, headers=HEADERS, timeout=TIMEOUT)
    except requests.RequestException as e:
        print(f"‚ùå –°–µ—Ç–µ–≤–æ–π —Å–±–æ–π –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Ozon API: {e}")
        return

    if resp.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ API: {resp.status_code}\n{resp.text}")
        return

    try:
        data = resp.json()
    except ValueError as e:
        print(f"‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –æ—Ç API: {e}")
        return

    df = pd.json_normalize(data.get("result", []))
    if df.empty:
        print("‚ö†Ô∏è Ozon API –≤–µ—Ä–Ω—É–ª –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.")
        return

    # ---------- DB engine ----------
    conn_str = (
        f"postgresql+psycopg://{db['user']}:{db['password']}"
        f"@{db['host']}:{db['port']}/{db['database']}"
    )
    try:
        engine = create_engine(conn_str, pool_pre_ping=True)
        df.to_sql("ozon_stock", engine, schema="raw", if_exists="replace", index=False)
    except OperationalError as e:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL: {e}")
        return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ –≤ –ë–î: {e}")
        return

    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(df)} —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü—É raw.ozon_stock")

if __name__ == "__main__":
    run_etl()
