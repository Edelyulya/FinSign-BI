import json
from pathlib import Path

import pandas as pd
import plotly.express as px
import streamlit as st
from sqlalchemy import create_engine, text
from sqlalchemy.exc import OperationalError

# ---------- Config ----------
ROOT = Path(__file__).resolve().parents[1]          # –∫–æ—Ä–µ–Ω—å —Ä–µ–ø–æ
CONFIG_PATH = ROOT / "config.json"

st.set_page_config(page_title="FinSign BI", layout="wide")
st.title("üìä FinSign BI Dashboard")

if not CONFIG_PATH.exists():
    st.error("‚ùå –§–∞–π–ª config.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞.")
    st.stop()

with CONFIG_PATH.open("r", encoding="utf-8") as f:
    cfg = json.load(f)

db = cfg["db"]

# ---------- DB engine (psycopg v3) ----------
conn_str = (
    f"postgresql+psycopg://{db['user']}:{db['password']}"
    f"@{db['host']}:{db['port']}/{db['database']}"
)
try:
    engine = create_engine(conn_str, pool_pre_ping=True)
    # –õ—ë–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–Ω–µ–∫—Ç–∞ (–Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞, –Ω–æ –ø–æ–ª–µ–∑–Ω–∞)
    with engine.connect() as conn:
        conn.execute(text("SELECT 1"))
except OperationalError as e:
    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ PostgreSQL.")
    st.code(str(e))
    st.stop()
except Exception as e:
    st.error("‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.")
    st.code(str(e))
    st.stop()

# ---------- Load data ----------
try:
    df = pd.read_sql("SELECT * FROM mart.fact_sales", engine)
except Exception as e:
    st.warning("‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ mart.fact_sales –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞.")
    st.code(str(e))
    st.stop()

if df.empty:
    st.info("‚ÑπÔ∏è –í —Ç–∞–±–ª–∏—Ü–µ mart.fact_sales –ø–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.")
    st.stop()

# ---------- KPIs ----------
col1, col2, col3 = st.columns(3)
revenue_sum = float(df["revenue"].sum() or 0)
profit_sum = float(df["profit"].sum() or 0)
margin = (profit_sum / revenue_sum * 100) if revenue_sum else 0.0

col1.metric("–í—ã—Ä—É—á–∫–∞", f"{revenue_sum:,.0f} ‚ÇΩ")
col2.metric("–ü—Ä–∏–±—ã–ª—å", f"{profit_sum:,.0f} ‚ÇΩ")
col3.metric("–°—Ä–µ–¥–Ω—è—è –º–∞—Ä–∂–∞", f"{margin:.1f}%")

# ---------- Charts ----------
fig = px.bar(
    df,
    x="date",
    y="revenue",
    color="marketplace",
    title="–í—ã—Ä—É—á–∫–∞ –ø–æ –¥–Ω—è–º",
    labels={"date": "–î–∞—Ç–∞", "revenue": "–í—ã—Ä—É—á–∫–∞ (‚ÇΩ)", "marketplace": "–ü–ª–æ—â–∞–¥–∫–∞"},
)
st.plotly_chart(fig, use_container_width=True)
