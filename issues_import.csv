Title,Body,Labels,Milestone,State
"Init: scaffold проекта","Создать структуру папок (app, etl, sql, docs), базовые файлы (.gitignore, README, requirements.txt), добавить config.json.","type:infra,priority:P1,status:done","M1 - MVP (Local)","closed"
"Init: зависимости","Установить зависимости для Python 3.13: streamlit, pandas, plotly, sqlalchemy>=2, psycopg[binary], requests.","type:infra,priority:P1,status:done","M1 - MVP (Local)","closed"
"Docker: PostgreSQL локально","Поднять контейнер Postgres (`pg-finsign`), порт 5432, пароль postgres=12345.","type:db,priority:P1,status:done","M1 - MVP (Local)","closed"
"БД: создать схему","Применить sql/schema.sql (создать схемы raw, mart; создать таблицу mart.fact_sales).","type:db,priority:P1,status:done","M1 - MVP (Local)","closed"
"Streamlit: базовый дэшборд","Страница с KPI (выручка/прибыль/маржа) и график выручки. Подключение через SQLAlchemy.","type:app,priority:P1,status:done","M1 - MVP (Local)","closed"
"DBeaver: подключение","Настроить DBeaver: localhost:5432, БД finsign, user postgres, pass 12345.","type:dx,priority:P3,status:done","M1 - MVP (Local)","closed"
"ETL: шаблон Ozon","Скрипт etl/ozon_loader.py: запрос к Ozon API, запись в raw.ozon_stock.","type:etl,priority:P1,status:done","M1 - MVP (Local)","closed"
"Docs: README MVP","Описать локальный запуск и проверку в README.","type:docs,priority:P3,status:done","M1 - MVP (Local)","closed"
"Ozon API: ключи и проверка","Проверить доступ к Ozon Seller API: client_id, api_key. Тестовый POST /v2/analytics/stock_on_warehouses.","type:api,priority:P1","M2 - API (Ozon, WB)","open"
"WB API: ключ и эндпоинты","Получить `X-WB-Token`, выбрать эндпоинты (продажи/остатки), подготовить запросы.","type:api,priority:P1","M2 - API (Ozon, WB)","open"
"ETL: загрузка Ozon → raw","Сохранить данные Ozon в таблицу raw.ozon_stock (idempotent).","type:etl,priority:P1","M2 - API (Ozon, WB)","open"
"ETL: загрузка WB → raw","Сохранить данные WB в таблицу raw.wb_sales (idempotent).","type:etl,priority:P1","M2 - API (Ozon, WB)","open"
"Модель: mart.fact_sales","Реализовать витрину продаж на SQL: нормализовать/агрегировать данные Ozon/WB в mart.fact_sales.","type:model,priority:P1","M2 - API (Ozon, WB)","open"
"Streamlit: кнопка 'Запустить ETL'","В админ-панели добавить кнопку запуска ETL (subprocess/threads), вывод статуса.","type:app,priority:P2","M3 - Analytics & Admin","open"
"Streamlit: фильтры и вкладки","Фильтры по периоду/площадке/региону; вкладки: Продажи, Остатки, Ozon, WB, Логи.","type:app,priority:P2","M3 - Analytics & Admin","open"
"Логирование ETL","Создать таблицу etl_log и писать туда статус/длительность/источник.","type:etl,priority:P2","M3 - Analytics & Admin","open"
"RLS и роли","Добавить роли admin/manager; включить RLS на mart.fact_sales; политики по marketplace/region.","type:security,priority:P2","M4 - RLS & Access","open"
"Деплой Streamlit","Развернуть веб-приложение на Railway/Render. Секреты через переменные окружения.","type:devops,priority:P3","M5 - Cloud Deploy","open"
"Деплой PostgreSQL","Хостинг Postgres (Railway/Render/Neon.io). Перенос данных с локального инстанса.","type:devops,priority:P3","M5 - Cloud Deploy","open"
"Планировщик ETL","Настроить расписание запуска ETL (cron/Airflow). Запуск каждые 6 часов.","type:etl,priority:P3","M6 - Automation & Logging","open"
"Документация v1","ER-диаграмма, схема ETL, описание API, скриншоты дэшбордов. Release notes.","type:docs,priority:P3","M7 - Docs & Release","open"
